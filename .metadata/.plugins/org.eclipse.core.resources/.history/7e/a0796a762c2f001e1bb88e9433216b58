package cps161_FinalProject;
public class MoveOneToken implements FunkyToken {
    private char token;
    private int x;
    private int y;

    public MoveOneToken(char token) {
        this.token = token;
    }

    @Override
    public char getToken() {
        return token;
    }

    @Override
    public void setX(int x) {
        this.x = x;
    }

    @Override
    public void setY(int y) {
        this.y = y;
    }

    @Override
    public int getX() {
        return x;
    }

    @Override
    public int getY() {
        return y;
    }

    @Override
    public void move(FunkyBoard board) {
        int currentX = getX();
        int currentY = getY();

        Random random = new Random();
        int direction = random.nextInt(4); // 0: up, 1: right, 2: down, 3: left

        switch (direction) {
            case 0:
                currentY = Math.max(currentY - 1, 0);
                break;
            case 1:
                currentX = Math.min(currentX + 1, board.getBoardSize() - 1);
                break;
            case 2:
                currentY = Math.min(currentY + 1, board.getBoardSize() - 1);
                break;
            case 3:
                currentX = Math.max(currentX - 1, 0);
                break;
        }

        if (board.getFunkyTokenAt(currentX, currentY) == null) {
            board.moveToken(this, currentX, currentY);
        } else {
            FunkyToken otherToken = board.getFunkyTokenAt(currentX, currentY);
            board.moveToken(this, currentX, currentY);
            board.claimToken(this, otherToken);
        }
    }
}
