package cps161_FinalProject;
import java.util.Random;

public class FunkyBoard {
    private char[][] board;
    private int boardSize;
    private FunkyToken[] tokens;

    public FunkyBoard(int size, FunkyToken[] tokens) {
        boardSize = size;
        board = new char[boardSize][boardSize];
        this.tokens = tokens;

        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                board[i][j] = '-';
            }
        }
    }

    public int getBoardSize() {
        return boardSize;
    }

    public char getTokenAt(int x, int y) {
        return board[x][y];
    }

    public void setTokenAt(int x, int y, char token) {
        board[x][y] = token;
    }

    public void displayBoard() {
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    public void placeToken(char token, int x, int y) {
        if (x >= 0 && x < boardSize && y >= 0 && y < boardSize) {
            char currentToken = board[x][y];
            if (currentToken == '-' || currentToken == token) {
                board[x][y] = token;
            }
        }
    }

    public void runGame() {
        Random random = new Random();
        int currentPlayerIndex = 0;

        while (true) {
            FunkyToken currentPlayerToken = tokens[currentPlayerIndex];
            currentPlayerToken.move(this);
            displayBoard();

            if (!currentPlayerToken.hasOwnedSpaces(this)) {
                currentPlayerToken.setActive(false);
            }

            int activeTokens = 0;
            for (FunkyToken token : tokens) {
                if (token.isActive()) {
                    activeTokens++;
                }
            }

            if (activeTokens == 1) {
                break;
            }

            currentPlayerIndex = (currentPlayerIndex + 1) % tokens.length;
        }

        System.out.println("Game Over! Winner is: ");
        for (FunkyToken token : tokens) {
            if (token.isActive()) {
                System.out.println("Token: " + token.getToken());
            }
        }
    }
}
