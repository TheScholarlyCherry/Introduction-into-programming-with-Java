package cps161_FinalProject;
import java.util.Random;

public class FunkyBoard {
    private char[][] board;

    public FunkyBoard(int size) {
        board = new char[size][size];
        initializeTokens();
    }

    private void initializeTokens() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                board[i][j] = '-';
            }
        }
    }

    public int getBoardSize() {
        return board.length;
    }

    public boolean isCellEmpty(int x, int y) {
        return board[x][y] == '-';
    }

    public void placeToken(FunkyToken token, int x, int y) {
        board[x][y] = token.getToken();
    }

    public void moveToken(FunkyToken token, int currentX, int currentY, int newX, int newY) {
        if (newX >= 0 && newX < board.length && newY >= 0 && newY < board.length) {
            if (board[newX][newY] == '-') {
                board[currentX][currentY] = '-';
                board[newX][newY] = token.getToken();
            } else if (board[newX][newY] != token.getToken()) {
                board[currentX][currentY] = '-';
                board[newX][newY] = token.getToken();
                token.setActive(false);
            }
        }
    }

    public FunkyToken getWinner() {
        FunkyToken winner = null;
        int numTokens = 0;

        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] != '-') {
                    if (winner == null) {
                        winner = findToken(board[i][j]);
                        numTokens++;
                    } else {
                        FunkyToken currentToken = findToken(board[i][j]);
                        if (currentToken == winner) {
                            numTokens++;
                        } else {
                            numTokens--;
                        }
                    }
                }
            }
        }

        if (numTokens == 1) {
            return winner;
        } else {
            return null;
        }
    }

    private FunkyToken findToken(char token) {
        for (int i = 0; i < FunkyBoardDemo.tokens.length; i++) {
            if (FunkyBoardDemo.tokens[i].getToken() == token) {
                return FunkyBoardDemo.tokens[i];
            }
        }
        return null;
    }

    public void displayBoard() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }
}
