package cps161_FinalProject;
import java.util.Random;

public class FunkyBoard {
    private char[][] board;
    private int size;

    public FunkyBoard(int size) {
        this.size = size;
        this.board = new char[size][size];
        initializeBoard();
    }

    private void initializeBoard() {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                board[i][j] = '-';
            }
        }
    }

    public void displayBoard() {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    public void placeToken(char token, int x, int y) {
        if (x >= 0 && x < size && y >= 0 && y < size) {
            board[x][y] = token;
        }
    }

    public boolean isValidMove(int x, int y) {
        return x >= 0 && x < size && y >= 0 && y < size && board[x][y] == '-';
    }

    public void updateTokenPosition(char token, int oldX, int oldY, int newX, int newY) {
        if (isValidMove(newX, newY)) {
            board[oldX][oldY] = '-';
            board[newX][newY] = token;
        }
    }

    public int getBoardSize() {
        return size;
    }

    public char getTokenAt(int x, int y) {
        return board[x][y];
    }

    public char[][] getBoard() {
        return board;
    }

    public FunkyToken getWinner() {
        FunkyToken winner = null;
        int activeTokenCount = 0;
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                if (board[i][j] != '-') {
                    activeTokenCount++;
                    if (winner == null) {
                        winner = new FunkyToken(board[i][j]);
                    } else if (board[i][j] != winner.getToken()) {
                        return null;
                    }
                }
            }
        }

        return activeTokenCount == 1 ? winner : null;
    }
}
