package cps161_FinalProject;

import java.util.Random;

public class FunkyBoard {
    private char[][] board;

    public FunkyBoard(int size) {
        board = new char[size][size];
    }

    public void placeToken(FunkyToken token, int x, int y) {
        token.setX(x);
        token.setY(y);
        board[y][x] = token.getToken();
    }

    public void moveToken(FunkyToken token) {
        int currentX = token.getX();
        int currentY = token.getY();

        Random random = new Random();
        int direction = random.nextInt(4); // 0: up, 1: right, 2: down, 3: left

        switch (direction) {
            case 0:
                currentY = Math.max(currentY - 1, 0);
                break;
            case 1:
                currentX = Math.min(currentX + 1, board.length - 1);
                break;
            case 2:
                currentY = Math.min(currentY + 1, board.length - 1);
                break;
            case 3:
                currentX = Math.max(currentX - 1, 0);
                break;
        }

        if (board[currentY][currentX] == 0) {
            board[token.getY()][token.getX()] = 0;
            token.setX(currentX);
            token.setY(currentY);
            board[currentY][currentX] = token.getToken();
        } else if (board[currentY][currentX] != token.getToken()) {
            board[currentY][currentX] = token.getToken();
        }
    }

    public FunkyToken getWinner() {
        int countRandom = 0;
        int countMoveOne = 0;

        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == '@') {
                    countRandom++;
                } else if (board[i][j] == '$') {
                    countMoveOne++;
                }
            }
        }

        if (countRandom == 0) {
            return new MoveOneToken('$');
        } else if (countMoveOne == 0) {
            return new RandomToken('@');
        } else {
            return null;
        }
    }

    public void displayBoard() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }
}
