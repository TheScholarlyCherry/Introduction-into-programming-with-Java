package cps161_FinalProject;
import java.util.Random;

public class MoveOneToken extends FunkyToken {
    private Random random;

    public MoveOneToken(char token) {
        super(token);
        random = new Random();
    }

    @Override
    public void move(FunkyBoard board) {
        int boardSize = board.getBoardSize();
        char[][] gameBoard = board.getBoard();

        int currentX = -1;
        int currentY = -1;

        // Find the current position of this token on the board
        outerLoop: for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                if (gameBoard[i][j] == getToken()) {
                    currentX = i;
                    currentY = j;
                    break outerLoop;
                }
            }
        }

        if (currentX == -1 || currentY == -1) {
            // Token not found on the board, return
            return;
        }

        // Shuffle the directions array to try different directions randomly
        int[] directions = { 0, 1, 2, 3 }; // 0: Up, 1: Down, 2: Left, 3: Right
        for (int i = directions.length - 1; i > 0; i--) {
            int index = random.nextInt(i + 1);
            int temp = directions[index];
            directions[index] = directions[i];
            directions[i] = temp;
        }

        int newX = currentX;
        int newY = currentY;

        for (int direction : directions) {
            switch (direction) {
                case 0: // Move up
                    newX = currentX - 1;
                    break;
                case 1: // Move down
                    newX = currentX + 1;
                    break;
                case 2: // Move left
                    newY = currentY - 1;
                    break;
                case 3: // Move right
                    newY = currentY + 1;
                    break;
            }

            if (board.isValidMove(newX, newY)) {
                // Update the board and the token's position
                board.updateTokenPosition(getToken(), currentX, currentY, newX, newY);
                break;
            }
        }
    }
}
