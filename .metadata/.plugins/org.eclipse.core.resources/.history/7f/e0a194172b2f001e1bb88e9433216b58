package cps161_FinalProject;

import java.util.Random;

public class FunkyBoard {
    private char[][] board;

    public FunkyBoard(int size) {
        board = new char[size][size];
    }

    // Add methods to place and get tokens on the board
    public void setSpace(int x, int y, char token) {
        board[x][y] = token;
    }

    public char getSpace(int x, int y) {
        return board[x][y];
    }

    // Add methods to get token positions
    public int getTokenXPosition(FunkyToken token) {
        for (int x = 0; x < board.length; x++) {
            for (int y = 0; y < board[x].length; y++) {
                if (board[x][y] == token.getToken()) {
                    return x;
                }
            }
        }
        return -1; // Token not found
    }

    public int getTokenYPosition(FunkyToken token) {
        for (int x = 0; x < board.length; x++) {
            for (int y = 0; y < board[x].length; y++) {
                if (board[x][y] == token.getToken()) {
                    return y;
                }
            }
        }
        return -1; // Token not found
    }

    // Add method to display the board
    public void displayBoard() {
        for (int x = 0; x < board.length; x++) {
            for (int y = 0; y < board[x].length; y++) {
                System.out.print(board[x][y] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    // Add method to check if there's a winner
    public FunkyToken getWinner() {
        FunkyToken winner = null;
        for (int x = 0; x < board.length; x++) {
            for (int y = 0; y < board[x].length; y++) {
                if (board[x][y] != 0) {
                    if (winner == null) {
                        winner = getToken(board[x][y]);
                    } else if (winner.getToken() != board[x][y]) {
                        return null; // There are still multiple tokens on the board, no winner yet
                    }
                }
            }
        }
        return winner;
    }

    // Helper method to get the FunkyToken object by token character
    private FunkyToken getToken(char token) {
        if (token == '@' || token == '&' || token == '$') {
            return new RandomToken(token);
        } else {
            return new MoveOneToken(token);
        }
    }
}

