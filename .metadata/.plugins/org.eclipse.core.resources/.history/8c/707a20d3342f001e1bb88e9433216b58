package cps161_FinalProject;
import java.util.Arrays;

public class FunkyBoard {
    private char[][] board;

    public FunkyBoard(int size) {
        board = new char[size][size];
        for (int i = 0; i < size; i++) {
            Arrays.fill(board[i], '-');
        }
    }

    public int getBoardSize() {
        return board.length;
    }

    public char getTokenAt(int x, int y) {
        return board[x][y];
    }

    public void placeToken(FunkyToken token, int x, int y) {
        board[x][y] = token.getToken();
    }

    public void displayBoard() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    public FunkyToken getWinner() {
        FunkyToken winner = null;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                char token = board[i][j];
                if (token != '-') {
                    if (winner == null) {
                        winner = new FunkyToken(token) {
                            @Override
                            public void move(FunkyBoard board) {
                                // Empty move implementation, as this token is just for identifying the winner.
                            }
                        };
                    } else if (token != winner.getToken()) {
                        // More than one token found on the board, no winner yet.
                        return null;
                    }
                }
            }
        }
        return winner;
    }
}
