package cps161_FinalProject;
import java.util.Random;

public class FunkyBoard {
    private char[][] board;
    private int boardSize;

    public FunkyBoard(int size) {
        boardSize = size;
        board = new char[boardSize][boardSize];
        initializeBoard();
    }

    public int getBoardSize() {
        return boardSize;
    }

    private void initializeBoard() {
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                board[i][j] = '-';
            }
        }
    }

    public char getTokenAt(int x, int y) {
        if (x >= 0 && x < boardSize && y >= 0 && y < boardSize) {
            return board[x][y];
        }
        return '-';
    }

    public void setTokenAt(int x, int y, char token) {
        if (x >= 0 && x < boardSize && y >= 0 && y < boardSize) {
            board[x][y] = token;
        }
    }

    public void displayBoard() {
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    public int getTokenXPosition(FunkyToken token) {
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                if (board[i][j] == token.getToken()) {
                    return i;
                }
            }
        }
        return -1;
    }

    public int getTokenYPosition(FunkyToken token) {
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                if (board[i][j] == token.getToken()) {
                    return j;
                }
            }
        }
        return -1;
    }

    public void placeToken(FunkyToken token, int x, int y) {
        if (x >= 0 && x < boardSize && y >= 0 && y < boardSize) {
            board[x][y] = token.getToken();
        }
    }

    public FunkyToken getWinner() {
        int randomX = new Random().nextInt(boardSize);
        int randomY = new Random().nextInt(boardSize);

        char winningToken = board[randomX][randomY];

        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                if (board[i][j] != winningToken) {
                    return null;
                }
            }
        }

        return new FunkyToken(winningToken) {
            @Override
            public void move(FunkyBoard board) {
                // Do nothing
            }
        };
    }
}
